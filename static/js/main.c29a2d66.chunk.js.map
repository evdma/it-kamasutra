{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app-recuder.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","newMessageBody","sendMessageCreator","type","dialogsReducer","state","arguments","length","undefined","action","body","Object","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","module","exports","userPhoto","__webpack_require__","p","d","__webpack_exports__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","baseURL","withCredentials","headers","API-KEY","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","updateStatus","status","put","me","login","email","password","rememberMe","logout","nav","item","activeLink","Boolean","window","location","hostname","match","Header","props","react_default","a","createElement","className","classes","header","src","alt","loginBlock","isAuth","onClick","react_router_dom","to","setAuthUserData","payload","getAuthUserData","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_response$data$data","_login","wrap","_context","prev","next","sent","resultCode","stop","_x","apply","this","authReducer","objectSpread","HeaderContainer","components_Header_Header","React","Component","connect","auth","_ref3","_callee3","_context3","_x3","Navbar","activeClassName","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","_x2","_x4","_x5","usersReducer","followed","count","toConsumableArray","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","page","cn","defineProperty","selectedPage","pageNumber","key","e","User","photos","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","setCurrentPage","requestUsers","_this$props","Fragment","Preloader","components_Users_Users","compose","bind","_x6","_ref4","_callee4","_context4","_x7","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","passowrd","stopSubmit","_error","react_router","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","promise","Promise","all","SamuraiApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","_ref$meta","meta","touched","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","Textarea","restProps","child","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","maxLengthCreator","value","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","newPost","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"6IAEIA,EAAe,CACfC,QAAS,CACL,CAAEC,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,UAEnBC,SAAU,CACN,CAAEF,GAAI,EAAGG,QAAS,MAClB,CAAEH,GAAI,EAAGG,QAAS,OAClB,CAAEH,GAAI,EAAGG,QAAS,SAEtBC,eAAgB,IAePC,EAAqB,SAACD,GAAD,MAAqB,CAAEE,KA3BpC,eA2BwDF,mBAE9DG,IAdQ,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAON,MACX,IAjBa,eAkBT,IAAIO,EAAOD,EAAOR,eAClB,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACAN,EADP,CAEIN,SAAQ,GAAAc,OAAAF,OAAAG,EAAA,EAAAH,CAAMN,EAAMN,UAAZ,CAAsB,CAAEF,GAAI,EAAGG,QAASU,OAExD,QAAS,OAAOL,yBCtBxBU,EAAAC,QAAA,CAAkBC,UAAA,+CCDlBF,EAAAC,QAAiBE,EAAAC,EAAuB,sDCAxCJ,EAAAC,QAAiBE,EAAAC,EAAuB,uECAxCD,EAAAE,EAAAC,EAAA,sBAAAC,IAAAJ,EAAAE,EAAAC,EAAA,sBAAAE,IAAAL,EAAAE,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAP,EAAA,KAEMQ,EAAWC,SAAa,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACLC,UAAW,0CAINT,EAAW,CACpBU,SADoB,WACqB,IAAhCC,EAAgC3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,EAAG4B,EAAe5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACjC,OAAOoB,EAASS,IAAT,cAAAtB,OAA2BoB,EAA3B,WAAApB,OAAgDqB,IAClDE,KAAK,SAAAC,GAAc,OAAOA,EAASC,QAE5CC,OALoB,SAKbC,GACH,OAAOd,EAASe,KAAT,UAAA5B,OAAwB2B,IAC1BJ,KAAK,SAAAC,GAAc,OAAOA,EAASC,QAE5CI,SAToB,SASXF,GACL,OAAOd,EAASiB,OAAT,UAAA9B,OAA0B2B,IAC5BJ,KAAK,SAAAC,GAAc,OAAOA,EAASC,QAE5CM,WAboB,SAaTJ,GACPjB,EAAWqB,WAAWJ,KAIjBjB,EAAa,CACtBqB,WADsB,SACXJ,GACP,OAAOd,EAASS,IAAT,WAAAtB,OAAwB2B,KAEnCK,UAJsB,SAIZL,GACN,OAAOd,EAASS,IAAT,kBAAAtB,OAA+B2B,KAE1CM,aAPsB,SAOTC,GACT,OAAOrB,EAASsB,IAAT,iBAA+B,CAAED,OAAQA,MAI3CvB,EAAU,CACnByB,GADmB,WAEf,OAAOvB,EAASS,IAAI,YAExBe,MAJmB,SAIbC,EAAOC,GAA8B,IAApBC,EAAoB/C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvC,OAAOoB,EAASe,KAAK,aAAc,CAAEU,QAAOC,WAAUC,gBAE1DC,OAPmB,WAQf,OAAO5B,EAASiB,OAAO,oCC/C/B5B,EAAAC,QAAA,CAAkBuC,IAAA,oBAAAC,KAAA,qBAAAC,WAAA,uJCWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mLCCSC,EAfA,SAACC,GACZ,OAAQC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQC,QAC/BL,EAAAC,EAAAC,cAAA,OAAKI,IAAI,4CAA4CC,IAAI,KAEzDP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQI,YAEhBT,EAAMU,OACAT,EAAAC,EAAAC,cAAA,WAAMH,EAAMd,MAAZ,MAAqBe,EAAAC,EAAAC,cAAA,UAAQQ,QAASX,EAAMV,QAAvB,aACrBW,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAI,UAAb,mECPlBlF,EAAe,CACf6C,OAAQ,KACRW,MAAO,KACPD,MAAO,KACPwB,QAAQ,GAcCI,EAAkB,SAACtC,EAAQW,EAAOD,EAAOwB,GAAvB,MAC1B,CAAEvE,KArBe,qCAqBM4E,QAAS,CAAEvC,SAAQW,QAAOD,QAAOwB,YAEhDM,EAAkB,iCAAAC,EAAAtE,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAM,SAAAC,EAAOC,GAAP,IAAAjD,EAAAkD,EAAA1F,EAAAsD,EAAAqC,EAAA,OAAAL,EAAAjB,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZpE,IAAQyB,KADI,OAEA,KAD7BZ,EAD6BqD,EAAAG,MAEpBvD,KAAKwD,aAAkBP,EACLlD,EAASC,KAAKA,KAAnCzC,EAD0B0F,EAC1B1F,GAAIsD,EADsBoC,EACtBpC,MAAOD,EADeqC,EACfrC,MACjBoC,EAASR,EAAgBjF,EAAIsD,EAAOD,GAAO,KAJd,wBAAAwC,EAAAK,SAAAV,MAAN,gBAAAW,GAAA,OAAAf,EAAAgB,MAAAC,KAAA5F,YAAA,IA0BhB6F,EAxCK,WAAkC,IAAjC9F,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAON,MACX,IAXc,qCAYV,OAAOQ,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EACAI,EAAOsE,SAElB,QAAS,OAAO1E,ICdlBgG,mLAEE,OAAOpC,EAAAC,EAAAC,cAACmC,EAAWJ,KAAKlC,cAFFuC,IAAMC,WAWrBC,cALS,SAACpG,GAAD,MAAY,CAChCqE,OAAQrE,EAAMqG,KAAKhC,OACnBxB,MAAO7C,EAAMqG,KAAKxD,QAGkB,CAAEI,OD6BpB,iCAAAqD,EAAAhG,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAM,SAAAwB,EAAOtB,GAAP,OAAAH,EAAAjB,EAAAuB,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACHpE,IAAQ8B,SADL,OAES,IAFTuD,EAAAhB,KAEXvD,KAAKwD,YACdR,EAASR,EAAgB,KAAM,KAAM,MAAM,IAHvB,wBAAA+B,EAAAd,SAAAa,MAAN,gBAAAE,GAAA,OAAAH,EAAAV,MAAAC,KAAA5F,YAAA,KC7BPmG,CAAqCJ,oBCWrCU,EAvBA,WACX,OAAQ9C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQd,KAC5BU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MACpBS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,WAAWmC,gBAAiB3C,IAAQZ,YAAhD,YAEJQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MACpBS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,WAAWmC,gBAAiB3C,IAAQZ,YAAhD,aAEJQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MACpBS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,SAASmC,gBAAiB3C,IAAQZ,YAA9C,UAEJQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MACpBS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,QAAQmC,gBAAiB3C,IAAQZ,YAA7C,SAEJQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MACpBS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,SAASmC,gBAAiB3C,IAAQZ,YAA9C,UAEJQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,MACpBS,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAG,YAAYmC,gBAAiB3C,IAAQZ,YAAjD,+BCtBCwD,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,IAAI,SAAAC,GACb,OAAIA,EAAKH,KAAiBD,EACfxG,OAAAyF,EAAA,EAAAzF,CAAA,GAAK4G,EAASF,GAElBE,KCMX5H,EAAe,CACf6H,MAAO,GACPtF,SAAU,GACVuF,gBAAiB,EACjBxF,YAAa,EACbyF,YAAY,EACZC,oBAAqB,IAgDZC,EAAgB,SAACpF,GAAD,MAAa,CAAErC,KA9D7B,SA8D2CqC,WAC7CqF,EAAkB,SAACrF,GAAD,MAAa,CAAErC,KA9D7B,WA8D6CqC,WACjDsF,EAAW,SAACN,GAAD,MAAY,CAAErH,KA9DpB,YA8DqCqH,UAG1CO,EAAmB,SAACL,GAAD,MAAiB,CAAEvH,KA9DxB,qBA8DkDuH,eAChEM,EAA0B,SAACN,EAAYlF,GAAb,MAAyB,CAAErC,KA9DtC,sBA8DiEuH,aAAYlF,WAYnGyF,EAAkB,eAAAC,EAAAvH,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAG,SAAA+C,EAAO7C,EAAU9C,EAAQ4F,EAAWC,GAApC,OAAAlD,EAAAjB,EAAAuB,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cACvBN,EAAS0C,GAAwB,EAAMxF,IADhB8F,EAAA1C,KAAA,EAENwC,EAAU5F,GAFJ,OAGC,IAHD8F,EAAAzC,KAGdC,YAAkBR,EAAS+C,EAAc7F,IAClD8C,EAAS0C,GAAwB,EAAOxF,IAJjB,wBAAA8F,EAAAvC,SAAAoC,MAAH,gBAAAI,EAAAzB,EAAA0B,EAAAC,GAAA,OAAAP,EAAAjC,MAAAC,KAAA5F,YAAA,GAmBToI,EAlFM,WAAkC,IAAjCrI,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEnD,OAAQC,EAAON,MACX,IApBO,SAqBH,OAAOQ,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEImH,MAAOP,EAAoB5G,EAAMmH,MAAO/G,EAAO+B,OAAQ,KAAM,CAAEmG,UAAU,MAEjF,IAxBS,WAyBL,OAAOhI,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEImH,MAAOP,EAAoB5G,EAAMmH,MAAO/G,EAAO+B,OAAQ,KAAM,CAAEmG,UAAU,MAEjF,IA5BU,YA6BN,OAAOhI,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEImH,MAAO/G,EAAO+G,QAEtB,IAhCiB,mBAiCb,OAAO7G,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEI4B,YAAaxB,EAAOwB,cAE5B,IApCsB,wBAqClB,OAAOtB,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEIoH,gBAAiBhH,EAAOmI,QAEhC,IAxCmB,qBAyCf,OAAOjI,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEIqH,WAAYjH,EAAOiH,aAE3B,IA5CoB,sBA6ChB,OAAO/G,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEIsH,oBAAqBlH,EAAOiH,WAAP,GAAA7G,OAAAF,OAAAkI,EAAA,EAAAlI,CACXN,EAAMsH,qBADK,CACgBlH,EAAO+B,SADvB7B,OAAAkI,EAAA,EAAAlI,CAEXN,EAAMsH,oBAAoBmB,OAAO,SAAAjJ,GAAE,OAAIA,IAAOY,EAAO+B,YAEvE,QACI,OAAOnC,gECvBJ0I,EAlCC,SAAA9D,GAGZ,IAH6F,IAA9E+D,EAA8E/D,EAA9E+D,gBAAiB9G,EAA6D+C,EAA7D/C,SAAUD,EAAmDgD,EAAnDhD,YAAagH,EAAsChE,EAAtCgE,cAAsCC,EAAAjE,EAAvBkE,mBAAuB,IAAAD,EAAT,GAASA,EACzFE,EAAaC,KAAKC,KAAKN,EAAkB9G,GACzCqH,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAAKD,EAAME,KAAKD,GAEjD,IAAIE,EAAeL,KAAKC,KAAKF,EAAaD,GALmDQ,EAMrDC,mBAAS,GAN4CC,EAAAlJ,OAAAmJ,EAAA,EAAAnJ,CAAAgJ,EAAA,GAMxFI,EANwFF,EAAA,GAMzEG,EANyEH,EAAA,GAOzFI,GAAyBF,EAAgB,GAAKZ,EAAc,EAC5De,EAAyBH,EAAgBZ,EAE7C,OACIlF,EAAAC,EAAAC,cAAA,OAAKC,UAAW+F,IAAOC,WAClBL,EAAgB,GACb9F,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,WAAQqF,EAAiBD,EAAgB,KAA1D,QACHR,EACIT,OAAO,SAAAuB,GAAI,OAAIA,GAAQJ,GAAyBI,GAAQH,IACxD5C,IAAI,SAAC+C,GACF,OAAOpG,EAAAC,EAAAC,cAAA,QAAMC,UAAWkG,IAAG3J,OAAA4J,EAAA,EAAA5J,CAAA,GACtBwJ,IAAOK,aAAevI,IAAgBoI,GACxCF,IAAOM,YACNC,IAAKL,EACL1F,QAAS,SAACgG,GACN1B,EAAcoB,KACdA,KAGfX,EAAeK,GACZ9F,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,WAAQqF,EAAiBD,EAAgB,KAA1D,+CCKDa,GA/BJ,SAAA3F,GAAqD,IAAlDsC,EAAkDtC,EAAlDsC,KAAMI,EAA4C1C,EAA5C0C,oBAAqBjF,EAAuBuC,EAAvBvC,SAAUH,EAAa0C,EAAb1C,OAC/C,OAAQ0B,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,GAAI,YAAc0C,EAAK1H,IAC5BoE,EAAAC,EAAAC,cAAA,OAAKI,IAA0B,MAArBgD,EAAKsD,OAAOC,MAAgBvD,EAAKsD,OAAOC,MAAQ7J,KAAWmD,UAAW+F,IAAOlJ,UAAWuD,IAAI,OAG9GP,EAAAC,EAAAC,cAAA,WACKoD,EAAKoB,SACA1E,EAAAC,EAAAC,cAAA,UAAQ4G,SAAUpD,EAAoBqD,KAAK,SAAAnL,GAAE,OAAIA,IAAO0H,EAAK1H,KAAK8E,QAAS,WACzEjC,EAAS6E,EAAK1H,MADhB,YAGAoE,EAAAC,EAAAC,cAAA,UAAQ4G,SAAUpD,EAAoBqD,KAAK,SAAAnL,GAAE,OAAIA,IAAO0H,EAAK1H,KAAK8E,QAAS,WACzEpC,EAAOgF,EAAK1H,MADd,YAKdoE,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAAMoD,EAAKzH,MACXmE,EAAAC,EAAAC,cAAA,WAAMoD,EAAKxE,SAEfkB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,WAAM,yBACNF,EAAAC,EAAAC,cAAA,WAAM,0BCXP8G,GAfH,SAAAhG,GAAyE,IAAtEhD,EAAsEgD,EAAtEhD,YAAagH,EAAyDhE,EAAzDgE,cAAe/G,EAA0C+C,EAA1C/C,SAAUuF,EAAgCxC,EAAhCwC,gBAAoBzD,EAAYrD,OAAAuK,EAAA,EAAAvK,CAAAsE,EAAA,8DACjF,OAAOhB,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAACgH,EAAD,CAAWlJ,YAAaA,EAAa+G,gBAAiBvB,EAClDwB,cAAeA,EAAe/G,SAAUA,IAC5C+B,EAAAC,EAAAC,cAAA,WACIH,EAAMwD,MAAMF,IAAI,SAAAC,GAAI,OAChBtD,EAAAC,EAAAC,cAACiH,GAAD,CAAMV,IAAKnD,EAAK1H,GAAI0H,KAAMA,EACtBI,oBAAqB3D,EAAM2D,oBAC3BpF,OAAQyB,EAAMzB,OAAQG,SAAUsB,EAAMtB,2CCN7CV,GAAWqJ,aAJQ,SAAChL,GAC7B,OAAOA,EAAMiL,UAAU9D,OAG8B,SAACA,GACtD,OAAOA,EAAMsB,OAAO,SAAAvB,GAAI,OAAI,MAGnBgE,GAAc,SAAClL,GACxB,OAAOA,EAAMiL,UAAUpJ,UAGdsJ,GAAqB,SAACnL,GAC/B,OAAOA,EAAMiL,UAAU7D,iBAGdgE,GAAiB,SAACpL,GAC3B,OAAOA,EAAMiL,UAAUrJ,aAGdyJ,GAAgB,SAACrL,GAC1B,OAAOA,EAAMiL,UAAU5D,YAGdiE,GAAyB,SAACtL,GACnC,OAAOA,EAAMiL,UAAU3D,qBCnBrBiE,8MAOF3C,cAAgB,SAACwB,GAAe,IACrBvI,EAAY2J,EAAK7H,MAAjB9B,SACP2J,EAAK7H,MAAM8H,eAAerB,GAC1BoB,EAAK7H,MAAM+H,aAAatB,EAAYvI,uFARpB,IAAA8J,EACgB9F,KAAKlC,MAA9B/B,EADS+J,EACT/J,YAAaC,EADJ8J,EACI9J,SACpBgE,KAAKlC,MAAM+H,aAAa9J,EAAaC,oCAUrC,OAAO+B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+H,SAAA,KACF/F,KAAKlC,MAAM0D,WAAazD,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,MAAgB,KACzCjI,EAAAC,EAAAC,cAACgI,GAAD,CACIlK,YAAaiE,KAAKlC,MAAM/B,YACxBC,SAAUgE,KAAKlC,MAAM9B,SACrBuF,gBAAiBvB,KAAKlC,MAAMyD,gBAC5BwB,cAAe/C,KAAK+C,cACpBzB,MAAOtB,KAAKlC,MAAMwD,MAClBjF,OAAQ2D,KAAKlC,MAAMzB,OACnBG,SAAUwD,KAAKlC,MAAMtB,SACrBiF,oBAAqBzB,KAAKlC,MAAM2D,8BAxBnBpB,IAAMC,WAyCpB4F,gBACX3F,YAZmB,SAACpG,GACpB,MAAO,CACHmH,MAAOxF,GAAS3B,GAChB6B,SAAUqJ,GAAYlL,GACtBoH,gBAAiB+D,GAAmBnL,GACpC4B,YAAawJ,GAAepL,GAC5BqH,WAAYgE,GAAcrL,GAC1BsH,oBAAqBgE,GAAuBtL,KAKtB,CACtBkC,OLuCc,SAACC,GACnB,sBAAAmE,EAAAhG,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAO,SAAAwB,EAAOtB,GAAP,OAAAH,EAAAjB,EAAAuB,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACHqC,EAAmB3C,EAAU9C,EAAQlB,IAASiB,OAAO8J,KAAK/K,KAAWsG,GADlE,wBAAAf,EAAAd,SAAAa,MAAP,gBAAA0F,GAAA,OAAA3F,EAAAV,MAAAC,KAAA5F,YAAA,IKvCIoC,SL4CgB,SAACF,GACrB,sBAAA+J,EAAA5L,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAO,SAAAoH,EAAOlH,GAAP,OAAAH,EAAAjB,EAAAuB,KAAA,SAAAgH,GAAA,cAAAA,EAAA9G,KAAA8G,EAAA7G,MAAA,OACHqC,EAAmB3C,EAAU9C,EAAQlB,IAASoB,SAAS2J,KAAK/K,KAAWuG,GADpE,wBAAA4E,EAAA1G,SAAAyG,MAAP,gBAAAE,GAAA,OAAAH,EAAAtG,MAAAC,KAAA5F,YAAA,IK5CIwH,WACAgE,eLcsB,SAAC7J,GAAD,MAAkB,CAAE9B,KA9DzB,mBA8DiD8B,gBKblE+F,0BACA+D,aLiBoB,SAAC9J,EAAaC,GACtC,sBAAA+C,EAAAtE,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAO,SAAAC,EAAOC,GAAP,IAAAhD,EAAA,OAAA6C,EAAAjB,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHN,EAASyC,GAAiB,IADvBrC,EAAAE,KAAA,EAEctE,IAASU,SAASC,EAAaC,GAF7C,OAECI,EAFDoD,EAAAG,KAGHP,EAASyC,GAAiB,IAC1BzC,EAASwC,EAASxF,EAAK4E,QACvB5B,EAVgD,CAAEnF,KA9D5B,wBA8DyDyI,MAUnDtG,EAAKqK,aAL9B,wBAAAjH,EAAAK,SAAAV,MAAP,gBAAAW,GAAA,OAAAf,EAAAgB,MAAAC,KAAA5F,YAAA,MKzBW8L,CASbR,oDCjCIgB,GAAiBC,aAAU,CAAEC,KAAM,SAAlBD,CAhBL,SAAA5H,GAA6B,IAA1B8H,EAA0B9H,EAA1B8H,aAAcC,EAAY/H,EAAZ+H,MAC/B,OACI/I,EAAAC,EAAAC,cAAA,QAAM8I,SAAUF,GACXG,aAAY,QAAS,QAAS,CAACC,MAAWC,MAC1CF,aAAY,WAAY,WAAY,CAACC,MAAWC,KAAO,CAAEjN,KAAM,aAC/D+M,aAAY,aAAc,WAAY,GAAIE,KAAO,CAAEjN,KAAM,YAAc,eACvE6M,GAAS/I,EAAAC,EAAAC,cAAA,OAAKC,UAAW+F,KAAOkD,kBAC5BL,GAEL/I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BA6BDsC,eAJS,SAACpG,GAAD,MAAY,CAChCqE,OAAQrE,EAAMqG,KAAKhC,SAGiB,CAAExB,MVdrB,SAACC,EAAOmK,EAAUjK,GAAlB,sBAAA6E,EAAAvH,OAAAuE,EAAA,EAAAvE,CAAAwE,EAAAjB,EAAAkB,KAAiC,SAAA+C,EAAO7C,GAAP,IAAAjD,EAAArC,EAAA,OAAAmF,EAAAjB,EAAAuB,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,EAC7BpE,IAAQ0B,MAAMC,EAAOmK,EAAUjK,GADF,OAEjB,KAD7BhB,EAD8CiG,EAAAzC,MAErCvD,KAAKwD,WACdR,EAASN,MAELhF,EAAUqC,EAASC,KAAKvC,SAASQ,OAAS,EAAI8B,EAASC,KAAKvC,SAAS,GAAK,aAC9EuF,EAASiI,YAAW,QAAS,CAAEC,OAAQxN,MANO,wBAAAsI,EAAAvC,SAAAoC,MAAjC,gBAAAI,GAAA,OAAAL,EAAAjC,MAAAC,KAAA5F,YAAA,KUcNmG,CArBD,SAACzC,GAKX,OAAIA,EAAMU,OACCT,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAU5I,GAAI,aAIrBZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACyI,GAAD,CAAgBK,SAXP,SAACS,GACd1J,EAAMd,MAAMwK,EAASvK,MAAOuK,EAAStK,SAAUsK,EAASrK,kBCzB5D1D,GAAe,CACfgO,aAAa,GAwBFC,GArBI,WAAkC,IAAjCvN,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,GACxB,QADiDW,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAClCL,MACX,IARoB,sBAShB,OAAOQ,OAAAyF,EAAA,EAAAzF,CAAA,GACAN,EADP,CAEIsN,aAAa,IAErB,QAAS,OAAOtN,uBCfpBV,GAAe,GAOJkO,GALQ,WAAkC,IAAjCxN,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,GAAyBW,UAAAC,OAAA,GAAAD,UAAA,GAErD,OAAOD,uBCMPyN,GAAWC,aAAgB,CAC3BC,YAAaC,KACbC,YAAa9N,KACb+N,YAAaN,GACbvC,UAAW5C,EACXhC,KAAMP,EACN2G,KAAMsB,KACNC,IAAKT,KAGHU,GAAmB3K,OAAO4K,sCAAwCnC,KAIzDoC,GAFHC,aAAYX,GAAUQ,GAAiBI,aAAgBC,QCnBtDC,GAAe,SAACpI,GAEzB,OAAO,SAACxC,GACJ,OAAQC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2K,SAAP,CAAgBC,SAAU7K,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,OAC9BjI,EAAAC,EAAAC,cAACqC,EAAcxC,MCSrB+K,GAAmBxI,IAAMyI,KAAK,kBAAM9N,EAAAyJ,EAAA,GAAAvI,KAAAlB,EAAAmL,KAAA,aACpC4C,GAAmB1I,IAAMyI,KAAK,kBAAM9N,EAAAyJ,EAAA,GAAAvI,KAAAlB,EAAAmL,KAAA,aAEpC6C,+LAEFhJ,KAAKlC,MAAMmL,iDAKX,OAAKjJ,KAAKlC,MAAM2J,YAGd1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACiL,EAAD,MACAnL,EAAAC,EAAAC,cAACkL,EAAD,MACApL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAO6B,KAAK,oBAAoBC,OAAQX,GAAaK,MAErDhL,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAO6B,KAAK,WAAWC,OAAQX,GAAaG,MAE5C9K,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAO6B,KAAK,SAASC,OAAQ,kBAC3BtL,EAAAC,EAAAC,cAACqL,GAAD,SAEFvL,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAO6B,KAAK,SAASC,OAAQ,kBAC3BtL,EAAAC,EAAAC,cAACsL,GAAD,WAf4BxL,EAAAC,EAAAC,cAAC+H,GAAA,EAAD,aAPtB3F,IAAMC,WAmCpBkJ,GAAetD,aACjBuD,IACAlJ,YANsB,SAACpG,GAAD,MAAY,CAClCsN,YAAatN,EAAMgO,IAAIV,cAKE,CAAEwB,cJlCA,kBAAM,SAAC7J,GAChC,IAAIsK,EAAUtK,EAASN,KACvB6K,QAAQC,IAAI,CAACF,IAAUxN,KAAK,WACxBkD,EALH,CAAEnF,KAlBqB,8BIoDTiM,CAGjB8C,IAWaa,GATI,SAAC/L,GAElB,OAAQC,EAAAC,EAAAC,cAACS,EAAA,EAAD,KACNX,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAUxB,MAAOA,IACfvK,EAAAC,EAAAC,cAACuL,GAAD,SCxDNO,IAASV,OACLtL,EAAAC,EAAAC,cAAC+L,GAAD,MAAgBC,SAASC,eAAe,SlByHtC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnO,KAAK,SAAAoO,GACjCA,EAAaC,qMmB/HbC,EAAc,SAAAzL,GAAmDA,EAAhD0L,MAAgD,IAAAC,EAAA3L,EAAzC4L,KAAQC,EAAiCF,EAAjCE,QAAS9D,EAAwB4D,EAAxB5D,MAAS+D,EAAe9L,EAAf8L,SAC9CC,EAAWF,GAAW9D,EAC5B,OACIiE,EAAA/M,EAAAC,cAAA,OAAKC,UAAW+F,IAAO+G,YAAc,KAAOF,EAAW7G,IAAO6C,MAAQ,KAClEiE,EAAA/M,EAAAC,cAAA,WACK4M,GAELE,EAAA/M,EAAAC,cAAA,WACK6M,GAAYC,EAAA/M,EAAAC,cAAA,YAAO6I,MAMvBmE,EAAW,SAACnN,GAAU,IACvB2M,EAAqC3M,EAArC2M,MAAuBS,GAAcpN,EAA9B6M,KAA8B7M,EAAxBqN,MADU1Q,OAAA2Q,EAAA,EAAA3Q,CACcqD,EADd,2BAE/B,OAAQiN,EAAA/M,EAAAC,cAACuM,EAAgB1M,EAAOiN,EAAA/M,EAAAC,cAAA,WAAAxD,OAAA4Q,OAAA,GAAcZ,EAAWS,MAGhDhE,EAAQ,SAACpJ,GAAU,IACpB2M,EAAqC3M,EAArC2M,MAAuBS,GAAcpN,EAA9B6M,KAA8B7M,EAAxBqN,MADO1Q,OAAA2Q,EAAA,EAAA3Q,CACiBqD,EADjB,2BAE5B,OAAQiN,EAAA/M,EAAAC,cAACuM,EAAgB1M,EAAOiN,EAAA/M,EAAAC,cAAA,QAAAxD,OAAA4Q,OAAA,GAAWZ,EAAWS,MAG7ClE,EAAc,SAACsE,EAAa1R,EAAM2R,EAAYC,GAAhC,IAA2C1N,EAA3C1D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAmD,GAAIqR,EAAvDrR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA8D,GAA9D,OAAsE2Q,EAAA/M,EAAAC,cAAA,WAC7F8M,EAAA/M,EAAAC,cAACyN,EAAA,EAADjR,OAAA4Q,OAAA,CAAOC,YAAaA,EAAa1R,KAAMA,EACnC4R,UAAWA,EAAWG,SAAUJ,GAC5BzN,IACP2N,qCChCL,IAAAG,EAAA5Q,EAAA,GAAA6Q,EAAA7Q,EAAA8Q,EAAAF,GAAAG,EAAA/Q,EAAA,KAAAgR,EAAAhR,EAAA8Q,EAAAC,GAOe/F,IAJC,SAAClI,GACb,OAAO+N,EAAA7N,EAAAC,cAAA,OAAKI,IAAK4N,IAAW3N,IAAI,0BCHpCzD,EAAAC,QAAA,CAAkBkQ,YAAA,kCAAAlE,MAAA,4BAAAK,iBAAA,4DCAlBtM,EAAAC,QAAA,CAAkBoJ,UAAA,6BAAAK,WAAA,8BAAAD,aAAA,kECDlBtJ,EAAAE,EAAAC,EAAA,sBAAA8L,IAAAjM,EAAAE,EAAAC,EAAA,sBAAA+Q,IAAO,IAAMjF,EAAW,SAAAkF,GACpB,IAAIA,EACJ,MAAO,qBAGED,EAAmB,SAACE,GAAD,OAAe,SAACD,GAC5C,GAAIA,EAAM9R,OAAS+R,EAAW,uBAAAzR,OAAwByR,EAAxB,kCCLlCvR,EAAAC,QAAA,CAAkBsD,OAAA,uBAAAG,WAAA,gPCMd9E,EAAe,CACf4S,MAAO,CACH,CAAE1S,GAAI,EAAGG,QAAS,eAAgBwS,WAAY,IAC9C,CAAE3S,GAAI,EAAGG,QAAS,sBAAuBwS,WAAY,KAEzDC,QAAS,KACT1P,OAAQ,IAsCC2P,EAAuB,SAACC,GAAD,MAAkB,CAAExS,KAjDvC,WAiDuDwS,gBAI3DC,EAAY,SAAC7P,GAAD,MAAa,CAAE5C,KAnDrB,aAmDuC4C,WAI7C8P,EAAiB,SAACrQ,GAAD,sBAAAyC,EAAAtE,OAAAmS,EAAA,EAAAnS,CAAAoS,EAAA7O,EAAAkB,KAAY,SAAAC,EAAOC,GAAP,IAAAjD,EAAA,OAAA0Q,EAAA7O,EAAAuB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBrE,IAAWqB,WAAWJ,GADL,OAClCH,EADkCqD,EAAAG,KAEtCP,EARwC,CAAEnF,KAlDrB,mBAkD6CsS,QAQ1CpQ,EAASC,OAFK,wBAAAoD,EAAAK,SAAAV,MAAZ,gBAAAW,GAAA,OAAAf,EAAAgB,MAAAC,KAAA5F,YAAA,IAIjBuC,EAAY,SAACL,GAAD,sBAAA0F,EAAAvH,OAAAmS,EAAA,EAAAnS,CAAAoS,EAAA7O,EAAAkB,KAAY,SAAA+C,EAAO7C,GAAP,IAAAjD,EAAA,OAAA0Q,EAAA7O,EAAAuB,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,EACZrE,IAAWsB,UAAUL,GADT,OAC7BH,EAD6BiG,EAAAzC,KAEjCP,EAASsN,EAAUvQ,EAASC,OAFK,wBAAAgG,EAAAvC,SAAAoC,MAAZ,gBAAAI,GAAA,OAAAL,EAAAjC,MAAAC,KAAA5F,YAAA,IAKZwC,EAAe,SAACC,GAAD,sBAAA4D,EAAAhG,OAAAmS,EAAA,EAAAnS,CAAAoS,EAAA7O,EAAAkB,KAAY,SAAAwB,EAAOtB,GAAP,OAAAyN,EAAA7O,EAAAuB,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACfrE,IAAWuB,aAAaC,GADT,OAEH,IAFG8D,EAAAhB,KAEvBvD,KAAKwD,YACdR,EAASsN,EAAU7P,IAHa,wBAAA8D,EAAAd,SAAAa,MAAZ,gBAAAE,GAAA,OAAAH,EAAAV,MAAAC,KAAA5F,YAAA,IAMb2N,IA1DQ,WAAkC,IAAjC5N,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAON,MACX,IAhBS,WAiBL,IAAI6S,EAAU,CACVnT,GAAI,EACJG,QAASS,EAAOkS,YAChBH,WAAY,GAEhB,OAAO7R,OAAAsS,EAAA,EAAAtS,CAAA,GACAN,EADP,CAEIkS,MAAK,GAAA1R,OAAAF,OAAAuS,EAAA,EAAAvS,CAAMN,EAAMkS,OAAZ,CAAmBS,IACxBL,YAAa,KAGrB,IA3BiB,mBA4Bb,OAAOhS,OAAAsS,EAAA,EAAAtS,CAAA,GACAN,EADP,CAEIoS,QAAShS,EAAOgS,UAExB,IA/BW,aAgCP,OAAO9R,OAAAsS,EAAA,EAAAtS,CAAA,GACAN,EADP,CAEI0C,OAAQtC,EAAOsC,SAGvB,IApCY,cAqCR,OAAOpC,OAAAsS,EAAA,EAAAtS,CAAA,GACAN,EADP,CAEIkS,MAAOlS,EAAMkS,MAAMzJ,OAAO,SAAArG,GAAI,OAAIA,EAAK5C,KAAOY,EAAO0S,WAG7D,QAAS,OAAO9S","file":"static/js/main.c29a2d66.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Masha' },\r\n        { id: 2, name: 'Sonya' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'Bye' },\r\n        { id: 3, message: 'Nope' }\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__PurAL\"};","module.exports = __webpack_public_path__ + \"static/media/user.471a1ad3.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.eded90f3.svg\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"3bf7f882-c24f-4ac0-a51f-310107aa0c71\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    getProfile(userId) {\r\n        profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__34GHC\",\"item\":\"Navbar_item__1nGPE\",\"activeLink\":\"Navbar_activeLink__3XNMW\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (<header className={classes.header}>\r\n        <img src=\"https://www.redditstatic.com/new-icon.png\" alt=\"\" />\r\n\r\n        <div className={classes.loginBlock}>\r\n            {\r\n                props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log  out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n\r\n            }\r\n        </div>\r\n    </header>)\r\n}\r\n\r\nexport default Header;","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, passowrd, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, passowrd, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (<nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n        </div>\r\n    </nav>)\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId) {\r\n            return { ...user, ...newObjProps }\r\n        }\r\n        return user;\r\n    })\r\n}","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"TOGGLE_IS_FOLLOWING\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING, isFetching, userId });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId));\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i);\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            {pages\r\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map((page) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === page\r\n                    }, styles.pageNumber)}\r\n                        key={page}\r\n                        onClick={(e) => {\r\n                            onPageChanged(page)\r\n                        }}>{page}</span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (<div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} alt=\"\" />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id);\r\n                    }}>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id);\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, onPageChanged, pageSize, totalUsersCount, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n            onPageChanged={onPageChanged} pageSize={pageSize} />\r\n        <div>{\r\n            props.users.map(user =>\r\n                <User key={user.id} user={user}\r\n                    followingInProgress={props.followingInProgress}\r\n                    follow={props.follow} unfollow={props.unfollow}\r\n                />\r\n            )\r\n        }</div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(user => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { follow, unfollow, setUsers, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                currentPage={this.props.currentPage}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateTopProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateTopProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormControls.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(\"rememberMe\", \"checkbox\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () =>\r\n    ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-recuder';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return (<React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>)\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-recuder';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) return <Preloader />\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}\r\n          />\r\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)}\r\n          />\r\n          <Route path='/users' render={() =>\r\n            <UsersContainer />}\r\n          />\r\n          <Route path='/login' render={() =>\r\n            <LoginPage />\r\n          }\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nconst SamuraiApp = (props) => {\r\n\r\n  return (<BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>)\r\n}\r\n\r\nexport default SamuraiApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiApp from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiApp />, document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (<div>\r\n    <Field placeholder={placeholder} name={name}\r\n        component={component} validate={validators}\r\n        {...props} />\r\n    {text}\r\n</div>)","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} alt=\"\" />\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__Jw_2V\",\"error\":\"FormControls_error__jB-yp\",\"formSummaryError\":\"FormControls_formSummaryError__1shpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1EceP\",\"pageNumber\":\"Paginator_pageNumber__1zlVT\",\"selectedPage\":\"Paginator_selectedPage__2oJcQ\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2oavl\",\"loginBlock\":\"Header_loginBlock__1oOQR\"};","import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"How are you?\", likesCount: 45 },\r\n        { id: 2, message: \"It is my first post\", likesCount: 83 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}