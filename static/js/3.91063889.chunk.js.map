{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","postsBlock","posts","item","descriptionBlock","Post","props","react_default","a","createElement","className","classes","key","id","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","postElements","map","post","MyPosts_Post_Post","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","validate","required","component","Textarea","name","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useEffect","setStatus","status","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","_ref","profile","photos","large","ProfileInfo_ProfileStatusWithHooks","Preloader","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.91063889.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3_gu5\",\"posts\":\"MyPosts_posts__U6U52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3SDK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__241WH\"};","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (<div className={classes.item} key={props.id}>\r\n        <img src=\"https://pixel.nymag.com/imgs/daily/vulture/2018/11/02/02-avatar-2.w700.h700.jpg\" alt=\"\" />\r\n        {props.message}\r\n            <div>\r\n            <span>like {props.likesCount}</span>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postElements = props.posts.map(post => <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (<div className={classes.postsBlock}>\r\n        <h3>My Posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={classes.posts}>\r\n            {postElements}\r\n        </div>\r\n    </div>)\r\n});\r\n\r\n// class MyPosts extends PureComponent {\r\n\r\n//     shouldComponentUpdate(nextProps, nextState) {\r\n//         return nextProps != this.props || nextState != this.state;\r\n//     }\r\n\r\n//     render() {\r\n//         let postElements = this.props.posts.map(post => <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} />);\r\n\r\n//         let onAddPost = (values) => {\r\n//             this.props.addPost(values.newPostText);\r\n//         }\r\n\r\n//         return (<div className={classes.postsBlock}>\r\n//             <h3>My Posts</h3>\r\n//             <AddNewPostFormRedux onSubmit={onAddPost} />\r\n//             <div className={classes.posts}>\r\n//                 {postElements}\r\n//             </div>\r\n//         </div>)\r\n//     }\r\n// }\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength10]} component={Textarea}\r\n                    name=\"newPostText\" placeholder=\"Post message\" />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (<div>\r\n        {!editMode && <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n        </div>}\r\n        {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                    onChange={onStatusChange} onBlur={deactivateEditMode} value={status}\r\n                />\r\n            </div>}\r\n    </div>)\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (<div>\r\n        <div className={classes.descriptionBlock}>\r\n            <img src={profile.photos.large} alt=\"\" />\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n    return (<div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n        <MyPostsContainer />\r\n    </div>)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Profile {...this.props}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}