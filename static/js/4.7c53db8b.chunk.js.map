{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialog","active","messages","message","DialogItem","props","path","concat","id","react_default","a","createElement","className","cn","classes","Object","defineProperty","isActive","react_router_dom","to","name","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Button","variant","type","Dialogs","state","dialogsPage","activeDialogId","match","params","dialogId","dialogsElements","map","Dialogs_DialogItem_DialogItem","key","messagesElements","Dialogs_Message_Message","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_router","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,mJCYHC,EARI,SAACC,GAChB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAE7B,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAGC,IAAQd,OAATe,OAAAC,EAAA,EAAAD,CAAA,GAAoBD,IAAQb,OAASI,EAAMY,YACjER,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAASC,GAAIb,GAAOD,EAAMe,QCFnBC,EAJC,SAAChB,GACb,OAAQI,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAQX,SAAUE,EAAMF,mDCKhDmB,EAAcC,YAAiB,IA2C7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,CAdL,SAACpB,GACpB,OACII,EAAAC,EAAAC,cAAA,QAAMgB,SAAUtB,EAAMuB,cAClBnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAC7CF,KAAK,iBAAiBc,YAAY,wBAE1CzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,oBAQDC,EA3CC,SAACjC,GAEb,IAAIkC,EAAQlC,EAAMmC,YACdC,GAAkBpC,EAAMqC,MAAMC,OAAOC,SACrCC,EAAkBN,EAAMxC,QAAQ+C,IAChC,SAAA9C,GAAM,OAAIS,EAAAC,EAAAC,cAACoC,EAAD,CAAY3B,KAAMpB,EAAOoB,KAAM4B,IAAKhD,EAAOQ,GAAIA,GAAIR,EAAOQ,GAAIS,SAAUwB,IAAmBzC,EAAOQ,OAG5GyC,EAAmBV,EAAMrC,SAAS4C,IAClC,SAAA3C,GAAO,OAAIM,EAAAC,EAAAC,cAACuC,EAAD,CAAS/C,QAASA,EAAQA,QAAS6C,IAAK7C,EAAQK,GAAIA,GAAIL,EAAQK,OAO/E,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAQf,SAC5BU,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAQqC,cACnBN,GAELpC,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,IAAQZ,UACpBO,EAAAC,EAAAC,cAAA,WAAMsC,GACNxC,EAAAC,EAAAC,cAACa,EAAD,CAAqBG,SAVT,SAACyB,GACjB/C,EAAMgD,YAAYD,EAAOE,8ECpB7BC,EAA6B,SAAChB,GAAD,MAAY,CACzCiB,OAAQjB,EAAMkB,KAAKD,gBCgBRE,sBACXC,YAfkB,SAACpB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAIF,SAACoB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,QDRR,SAACQ,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAhD,OAAAkD,EAAA,EAAAlD,CAAAmD,KAAAH,GAAAhD,OAAAoD,EAAA,EAAApD,CAAAmD,KAAAnD,OAAAqD,EAAA,EAAArD,CAAAgD,GAAAM,MAAAH,KAAAI,YAAA,OAAAvD,OAAAwD,EAAA,EAAAxD,CAAAgD,EAAAC,GAAAjD,OAAAyD,EAAA,EAAAzD,CAAAgD,EAAA,EAAAf,IAAA,SAAAyB,MAAA,WAInC,OAAKP,KAAK7D,MAAMmD,OAET/C,EAAAC,EAAAC,cAACmD,EAAcI,KAAK7D,OAFII,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUvD,GAAG,eAJT4C,EAAA,CAEXY,IAAMb,WAUtC,OAFqCH,YAAQJ,EAARI,CAAoCI,ICG9DL,CAGbpB","file":"static/js/4.7c53db8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1eWBS\",\"dialog\":\"Dialogs_dialog__17Er_\",\"active\":\"Dialogs_active__32OYj\",\"messages\":\"Dialogs_messages__2lo4q\",\"message\":\"Dialogs_message__O_lBK\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cn from \"classnames\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (<div className={cn(classes.dialog, { [classes.active]: props.isActive })}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (<div className={classes.message}>{props.message}</div>)\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let activeDialogId = +props.match.params.dialogId;\r\n    let dialogsElements = state.dialogs.map(\r\n        dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} isActive={activeDialogId === dialog.id} />\r\n    );\r\n\r\n    let messagesElements = state.messages.map(\r\n        message => <Message message={message.message} key={message.id} id={message.id} />\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (<div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                    name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <Button variant=\"success\" type=\"submit\">Send message</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}