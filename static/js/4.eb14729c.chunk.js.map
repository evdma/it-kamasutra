{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialog","active","messages","message","DialogItem","props","path","concat","id","react_default","a","createElement","className","classes","react_router_dom","to","name","Message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","Dialogs_DialogItem_DialogItem","key","messagesElements","Dialogs_Message_Message","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_router","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,0HCWHC,EARI,SAACC,GAChB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAE7B,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAL,OAAKM,IAAQb,OAAb,KAAAO,OAAuBM,IAAQZ,SACjDQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCDnBC,EAJC,SAACZ,GACb,OAAQI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQb,QAASK,EAAMF,2CCI/Ce,EAAcC,YAAiB,IAyC7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,CAZL,SAAChB,GACpB,OACII,EAAAC,EAAAC,cAAA,QAAMY,SAAUlB,EAAMmB,cAClBf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAC7CF,KAAK,iBAAiBc,YAAY,wBAE1CrB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,kCAOFoB,EAzCC,SAAC1B,GAEb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMjC,QAAQoC,IAChC,SAAAnC,GAAM,OAAIS,EAAAC,EAAAC,cAACyB,EAAD,CAAYpB,KAAMhB,EAAOgB,KAAMqB,IAAKrC,EAAOQ,GAAIA,GAAIR,EAAOQ,OAGpE8B,EAAmBN,EAAM9B,SAASiC,IAClC,SAAAhC,GAAO,OAAIM,EAAAC,EAAAC,cAAC4B,EAAD,CAASpC,QAASA,EAAQA,QAASkC,IAAKlC,EAAQK,GAAIA,GAAIL,EAAQK,OAO/E,OAAQC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQd,SAC5BU,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ2B,cACnBN,GAELzB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,UACpBO,EAAAC,EAAAC,cAAA,WAAM2B,IAEV7B,EAAAC,EAAAC,cAACS,EAAD,CAAqBG,SAXL,SAACkB,GACjBpC,EAAMqC,YAAYD,EAAOE,6ECnB7BC,EAA6B,SAACZ,GAAD,MAAY,CACzCa,OAAQb,EAAMc,KAAKD,gBCgBRE,sBACXC,YAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAIF,SAACgB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,QDRR,SAACQ,GAAc,IAErCC,EAFqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAf,IAAA,SAAA0B,MAAA,WAInC,OAAKP,KAAKnD,MAAMwC,OAETpC,EAAAC,EAAAC,cAACwC,EAAcK,KAAKnD,OAFII,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUjD,GAAG,eAJTqC,EAAA,CAEXa,IAAMd,WAUtC,OAFqCH,YAAQJ,EAARI,CAAoCI,ICG9DL,CAGbhB","file":"static/js/4.eb14729c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1fv22\",\"dialog\":\"Dialogs_dialog__cTkB5\",\"active\":\"Dialogs_active__2HUNY\",\"messages\":\"Dialogs_messages__1VX5H\",\"message\":\"Dialogs_message__4gUSc\"};","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`;\r\n\r\n    return (<div className={`${classes.dialog} ${classes.active}`}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (<div className={classes.dialog}>{props.message}</div>)\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(\r\n        dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n    );\r\n\r\n    let messagesElements = state.messages.map(\r\n        message => <Message message={message.message} key={message.id} id={message.id} />\r\n    );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (<div className={classes.dialogs}>\r\n        <div className={classes.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={classes.messages}>\r\n            <div>{messagesElements}</div>\r\n        </div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>)\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                    name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send message</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"sourceRoot":""}