{"version":3,"sources":["api/api.js","assets/images/user.png","redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","serviceWorker.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","redux/app-recuder.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","baseURL","withCredentials","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","module","exports","p","initialState","dialogs","id","name","messages","message","newMessageBody","sendMessageCreator","type","dialogsReducer","state","action","body","Object","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","userPhoto","nav","item","activeLink","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","Textarea","props","restProps","child","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","Boolean","window","location","hostname","match","Header","react_default","classes","header","src","alt","loginBlock","isAuth","onClick","react_router_dom","to","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_response$data$data","_login","wrap","_context","prev","next","sent","resultCode","stop","_x","apply","this","_ref3","_callee3","_context3","url","_x3","authReducer","objectSpread","HeaderContainer","components_Header_Header","React","Component","connect","auth","_ref4","_callee4","_context4","_x4","Navbar","activeClassName","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","_x2","_x5","usersReducer","followed","count","toConsumableArray","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","page","defineProperty","selectedPage","pageNumber","key","e","User","photos","small","disabled","some","Users","objectWithoutProperties","common_Paginator_Paginator","Users_User","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","setCurrentPage","requestUsers","_this$props","Fragment","Preloader","components_Users_Users","compose","bind","_x6","_x7","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","passowrd","stopSubmit","_error","react_router","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebarPage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandledErrors","reason","promise","alert","console","log","initializeApp","addEventListener","removeEventListener","Header_HeaderContainer","components_Navbar_Navbar","exact","path","render","Users_UsersContainer","components_Login_Login","AppContainer","withRouter","Promise","all","SamuraiApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_preloader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","maxLengthCreator","value","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","t0","file","_ref5","_callee5","getState","_context5","abrupt","reject","newPost","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_mayev_Learning_React_it_kamasutra_it_kamasutra_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"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","file":"static/js/main.42a1a10d.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"3bf7f882-c24f-4ac0-a51f-310107aa0c71\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => { return response.data })\r\n    },\r\n    getProfile(userId) {\r\n        profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(\"profile\", profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.471a1ad3.png\";","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Masha' },\r\n        { id: 2, name: 'Sonya' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'Bye' },\r\n        { id: 3, message: 'Nope' }\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__PurAL\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.eded90f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__34GHC\",\"item\":\"Navbar_item__1nGPE\",\"activeLink\":\"Navbar_activeLink__3XNMW\"};","import React from 'react';\r\nimport styles from './FormControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><textarea {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (<FormControl {...props}><input {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (<div>\r\n    <Field placeholder={placeholder} name={name}\r\n        component={component} validate={validators}\r\n        {...props} />\r\n    {text}\r\n</div>)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (<header className={classes.header}>\r\n        <img src=\"https://www.redditstatic.com/new-icon.png\" alt=\"\" />\r\n\r\n        <div className={classes.loginBlock}>\r\n            {\r\n                props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log  out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n\r\n            }\r\n        </div>\r\n    </header>)\r\n}\r\n\r\nexport default Header;","import { authAPI, securityAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPCTHA_URL_SUCCESS ='samurai-network/auth/GET_CAPCTHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null then captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPCTHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({ type: GET_CAPCTHA_URL_SUCCESS, payload: { captchaUrl }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, passowrd, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, passowrd, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\r\nimport classes from './Navbar.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n    return (<nav className={classes.nav}>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={classes.item}>\r\n            <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n        </div>\r\n    </nav>)\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId) {\r\n            return { ...user, ...newObjProps }\r\n        }\r\n        return user;\r\n    })\r\n}","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"TOGGLE_IS_FOLLOWING\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({ type: SET_USERS, users });\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nexport const setUsersTotalCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount });\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING, isFetching, userId });\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId));\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) pages.push(i);\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={cn(styles.paginator)}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n            {pages\r\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map((page) => {\r\n                    return <span className={cn({\r\n                        [styles.selectedPage]: currentPage === page\r\n                    }, styles.pageNumber)}\r\n                        key={page}\r\n                        onClick={(e) => {\r\n                            onPageChanged(page)\r\n                        }}>{page}</span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (<div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} alt=\"\" />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        unfollow(user.id);\r\n                    }}>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        follow(user.id);\r\n                    }}>Follow</button>}\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\nlet Users = ({ currentPage, onPageChanged, pageSize, totalUsersCount, ...props }) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n            onPageChanged={onPageChanged} pageSize={pageSize} />\r\n        <div>{\r\n            props.users.map(user =>\r\n                <User key={user.id} user={user}\r\n                    followingInProgress={props.followingInProgress}\r\n                    follow={props.follow} unfollow={props.unfollow}\r\n                />\r\n            )\r\n        }</div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(user => true);\r\n});\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport { follow, unfollow, setUsers, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                currentPage={this.props.currentPage}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateTopProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateTopProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    })\r\n)(UsersContainer);","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormControls.module.css';\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(\"rememberMe\", \"checkbox\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"\" />}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input)}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () =>\r\n    ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-recuder';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return (<React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </React.Suspense>)\r\n    };\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter, Switch, Redirect } from 'react-router-dom';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-recuder';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport store from './redux/redux-store';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhandledErrors = (reason, promise) => {\r\n    alert(\"Some error occured\");\r\n    console.log(reason + promise);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.initialized) return <Preloader />\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n          <Switch>\r\n            <Route exact path='/' render={() => <Redirect to={\"/profile\"} />}\r\n            />\r\n            <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}\r\n            />\r\n            <Route path='/dialogs' render={withSuspense(DialogsContainer)}\r\n            />\r\n            <Route path='/users' render={() =>\r\n              <UsersContainer />}\r\n            />\r\n            <Route path='/login' render={() =>\r\n              <LoginPage />\r\n            }\r\n            />\r\n            <Route path='/*' render={() =>\r\n              <div>404 NOT FOUND</div>\r\n            }\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n});\r\n\r\nlet AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\nconst SamuraiApp = (props) => {\r\n\r\n  return (<HashRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </HashRouter>)\r\n}\r\n\r\nexport default SamuraiApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiApp from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiApp />, document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} alt=\"\" />\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__Jw_2V\",\"error\":\"FormControls_error__jB-yp\",\"formSummaryError\":\"FormControls_formSummaryError__1shpG\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1EceP\",\"pageNumber\":\"Paginator_pageNumber__1zlVT\",\"selectedPage\":\"Paginator_selectedPage__2oJcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2oavl\",\"loginBlock\":\"Header_loginBlock__1oOQR\"};","import { profileAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"How are you?\", likesCount: 45 },\r\n        { id: 2, message: \"It is my first post\", likesCount: 83 }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos }\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText });\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\n\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos });\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0)\r\n            dispatch(setStatus(status));\r\n    }\r\n    catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0)\r\n        dispatch(getUserProfile(userId));\r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}